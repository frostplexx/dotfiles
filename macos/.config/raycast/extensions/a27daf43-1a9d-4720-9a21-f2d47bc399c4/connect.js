"use strict";var f=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var N=Object.getOwnPropertyNames;var v=Object.prototype.hasOwnProperty;var b=(e,t)=>{for(var i in t)f(e,i,{get:t[i],enumerable:!0})},w=(e,t,i,g)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of N(t))!v.call(e,s)&&s!==i&&f(e,s,{get:()=>t[s],enumerable:!(g=h(t,s))||g.enumerable});return e};var T=e=>w(f({},"__esModule",{value:!0}),e);var E={};b(E,{default:()=>D});module.exports=T(E);var S=require("@raycast/api");var p=require("@raycast/api"),d=require("node:child_process");var o=class extends Error{},r=class extends Error{},a=class extends Error{},l=class extends Error{},c=class extends Error{};function x(){let e=u("status --json"),t=JSON.parse(e);if(!t||!t.Self.Online)throw new a;return t}var n=(0,p.getPreferenceValues)(),y=n.tailscalePath&&n.tailscalePath.length>0?n.tailscalePath:"/Applications/Tailscale.app/Contents/MacOS/Tailscale",I=n.tailscaleExecMaxBuffersMB&&n.tailscaleExecMaxBuffersMB?n.tailscaleExecMaxBuffersMB*1024*1024:10*1024*1024;function u(e){try{return(0,d.execSync)(`${y} ${e}`,{maxBuffer:I}).toString().trim()}catch(t){if(t instanceof Error){if(t.message.includes("No such file or directory"))throw new o;if(t.message.includes("is Tailscale running?"))throw new r;if(t.message.includes("spawnSync /bin/sh ENOBUFS"))throw new l;if(t.message.includes('The value of "options.maxBuffer" is out of range. It must be a positive number. Received NaN'))throw new c}throw console.log(`throwing error: ${t}`),t}}function m(e,t){return e instanceof o?{title:"Can\u2019t find the Tailscale CLI",description:`Your Tailscale CLI Path is invalid.
Update your extension preferences to fix this.`}:e instanceof r?{title:"Can\u2019t connect to Tailscale",description:"Make sure Tailscale is running and try again."}:e instanceof a?{title:"Not connected to a tailnet",description:`Tailscale is running, but you\u2019re not connected to a tailnet.
Log in and try again.`}:e instanceof l?{title:"Response larger than buffer size",description:"Increase `Max buffers ...` in the extension configuration."}:e instanceof c?{title:"Invalid `Max buffers ...` configuration",description:"Set `Max buffers ...` to a number in the extension configuration."}:(console.log(`Unhandled error: ${e}`),{title:"Something went wrong",description:t})}async function D(){let e;try{u("up"),e=`Connected on ${x().MagicDNSSuffix}`}catch(t){e=m(t,"").title}await(0,S.updateCommandMetadata)({subtitle:e})}
